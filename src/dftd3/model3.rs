use crate::data::{get_vdw_rad_pair, Element};
use crate::dftd3::reference3::{MREF, get_c6};
use crate::dftd3::reference3_inc::*;
use crate::model::Molecule;
use crate::defaults::WF_DEFAULT;

use ndarray::{s, Array, Array1, Array2, Array4, Axis};
use soa_derive::soa_zip;



#[derive(Clone)]
pub struct D3Model {
    pub rcov: Array1<f64>,   // covalent radii for coordination number
    pub rvdw: Array2<f64>,   // Van-der-Waals radii for damping function
    pub r4r2: Array1<f64>,   // expectation values for C8 extrapolation
    pub wf: f64,             // Weighting factor for CN interpolation
    pub ref_: Array1<usize>, // number of reference systems
    pub cn: Array2<f64>,     // reference coordination number
    pub c6: Array4<f64>,     // reference C6 coefficients
}

impl D3Model {
    /// Create new dispersion model from molecular structure input.
    pub fn from_molecule(
        mol: &Molecule,
        wf: Option<f64>,
    ) -> D3Model {
        let wf: f64 = wf.unwrap_or(WF_DEFAULT);

        let mut ref_: Array1<usize> = Array::zeros(mol.nid);
        for (izp, ref_num) in mol.num.iter().zip(&mut ref_) {
            *ref_num = NUMBER_OF_REFERENCES[*izp as usize];
        }

        let mut rcov: Array1<f64> = Array::zeros(mol.nid);
        for (izp, r) in mol.num.iter().zip(&mut rcov) {
            *r = Element::from(*izp).get_covalent_rad();
        }

        let mut r4r2: Array1<f64> = Array::zeros(mol.nid);
        for (izp, rr) in mol.num.iter().zip(&mut r4r2) {
            *rr = Element::from(*izp).get_r4r2_val();
        }

        let mut rvdw: Array2<f64> = Array::zeros((mol.nid, mol.nid));
        for (isp, izp) in mol.num.iter().enumerate() {
            for (jsp, jzp) in mol.num[..=isp].iter().enumerate() {
                rvdw[[isp, jsp]] = get_vdw_rad_pair(*jzp, *izp);
                rvdw[[jsp, isp]] = rvdw[[isp, jsp]]
            }
        }

        // Optimisation needed!
        let mut cn: Array2<f64> = Array::zeros((mol.nid, MREF));
        for isp in 0..mol.nid {
            let izp = mol.num[isp] as usize;
            for iref in 0..ref_[isp] {
                cn[[isp, iref]] = REFERENCE_CN[izp][iref];
            }
        }

        // Optimisation needed!
        let mut c6: Array4<f64> = Array::zeros((mol.nid, mol.nid, MREF, MREF));
        for isp in 0..mol.nid {
            let izp = mol.num[isp];
            for jsp in 0..isp + 1 {
                let jzp = mol.num[jsp];
                for iref in 0..ref_[isp] {
                    for jref in 0..ref_[jsp] {
                        c6[[isp, jsp, iref, jref]] = get_c6(jref, iref, jzp, izp);
                        c6[[jsp, isp, jref, iref]] = c6[[isp, jsp, iref, jref]];
                    }
                }
            }
        }

        D3Model {
            rcov,
            rvdw,
            r4r2,
            wf,
            ref_,
            cn,
            c6,
        }
    }

    /// Calculate the weights of the reference system for later use.
    pub fn weight_references(
        &self,
        mol: &mut Molecule,
    ) -> () {
        // parallelise this loop
        for (izp, coord_number, gaussian_weight) in soa_zip!(&mut mol.atomlist, [identifier, coord_number, mut gaussian_weight]) {
            *gaussian_weight = Array::zeros(MREF);
            let mut norm = 0.0;

            for cn_refi in self.cn.slice(s![.., ..self.ref_[*izp]]).axis_iter(Axis(1)) {
                let gw = weight_cn(self.wf, *coord_number, cn_refi[*izp]);
                norm += gw;
            }
            norm = 1.0 / norm;

            for(cn_refi, at_gw) in self.cn.slice(s![.., ..self.ref_[*izp]]).axis_iter(Axis(1)).zip(gaussian_weight.iter_mut()) {
                let expw = weight_cn(self.wf, *coord_number, cn_refi[*izp]);
                let mut gwk = expw * norm;
                if !gwk.is_finite() {
                    if ((self.cn.slice(s![*izp, ..self.ref_[*izp]]))
                        .iter()
                        .cloned()
                        .max_by(|a, b| a.partial_cmp(b).expect("Tried to compare a NaN"))
                        .unwrap()
                        - cn_refi[*izp]).abs() < f64::EPSILON
                    {
                        gwk = 1.0;
                    } else {
                        gwk = 0.0;
                    }
                }
                *at_gw = gwk;
            }
        }
    }

    /// Calculate the weights of the reference system and the derivatives w.r.t.
    /// coordination number for later use.
    pub fn weight_references_grad(
        &self,
        mol: &mut Molecule,
    ) -> () {

        // parallelise this loop
        for (izp, coord_number, gaussian_weight, gaussian_weight_dcn) in soa_zip!(&mut mol.atomlist, [identifier, coord_number, mut gaussian_weight, mut gaussian_weight_dcn]) {
            *gaussian_weight = Array::zeros(MREF);
            *gaussian_weight_dcn = Array::zeros(MREF);
            let mut norm = 0.0;
            let mut dnorm = 0.0;
            for cn_refi in self.cn.slice(s![.., ..self.ref_[*izp]]).axis_iter(Axis(1)) {
                let gw = weight_cn(self.wf, *coord_number, cn_refi[*izp]);
                norm += gw;
                dnorm += 2.0 * self.wf * (cn_refi[*izp] - *coord_number) * gw;
            }
            norm = 1.0 / norm;

            for (cn_refi, (at_gw, at_gwdcn)) in self.cn.slice(s![.., ..self.ref_[*izp]]).axis_iter(Axis(1)).zip(gaussian_weight.iter_mut().zip(gaussian_weight_dcn.iter_mut())) {
                let expw = weight_cn(self.wf, *coord_number, cn_refi[*izp]);
                let expd = 2.0 * self.wf * (cn_refi[*izp] - *coord_number) * expw;
                let mut gwk = expw * norm;
                if !gwk.is_finite() {
                    if ((self.cn.slice(s![*izp, ..self.ref_[*izp]]))
                        .iter()
                        .cloned()
                        .max_by(|a, b| a.partial_cmp(b).expect("Tried to compare a NaN"))
                        .unwrap()
                        - cn_refi[*izp]).abs() < f64::EPSILON
                    {
                        gwk = 1.0;
                    } else {
                        gwk = 0.0;
                    }
                }
                *at_gw = gwk;

                let mut dgwk = expd * norm - expw * dnorm * norm.powi(2);
                if !dgwk.is_finite() {
                    dgwk = 0.0;
                }
                *at_gwdcn = dgwk;
            }
        }
    }

    /// Calculate atomic dispersion coefficients.
    pub fn get_atomic_c6(
        &self,
        mol: &Molecule,
    ) -> Array2<f64> {
        let mut c6: Array2<f64> = Array::zeros((mol.n_atoms, mol.n_atoms));

        // paralellise this loop
        for (iat, (izp, gwvec_i)) in soa_zip!(&mol.atomlist, [identifier, gaussian_weight]).enumerate() {
            for (jat, (jzp, gwvec_j)) in soa_zip!(&mol.atomlist.slice(0..iat + 1), [identifier, gaussian_weight]).enumerate() {
                let mut dc6 = 0.0;
                for (c6_vec, gwvec_ii) in self.c6.slice(s![*jzp, *izp, ..self.ref_[*jzp], ..self.ref_[*izp]]).axis_iter(Axis(1)).zip(gwvec_i.iter()) {
                    for (c6_val, gwvec_jj) in c6_vec.iter().zip(gwvec_j.iter()){
                        dc6 += gwvec_ii * gwvec_jj * c6_val;
                    }
                }

                c6[[jat, iat]] = dc6;
                c6[[iat, jat]] = dc6;
            }
        }

        c6
    }

    /// Calculate atomic dispersion coefficients and their derivatives w.r.t.
    /// the coordination numbers.
    pub fn get_atomic_c6_grad(
        &self,
        mol: &Molecule,
    ) -> (Array2<f64>, Array2<f64>) {
        let mut c6: Array2<f64> = Array::zeros((mol.n_atoms, mol.n_atoms));
        let mut dc6dcn: Array2<f64> = Array::zeros((mol.n_atoms, mol.n_atoms));

        // paralellise this loop
        for (iat, (izp, gwvec_i, gwdcn_i)) in soa_zip!(&mol.atomlist, [identifier, gaussian_weight, gaussian_weight_dcn]).enumerate() {
            for (jat, (jzp, gwvec_j, gwdcn_j)) in soa_zip!(&mol.atomlist.slice(0..iat + 1), [identifier, gaussian_weight, gaussian_weight_dcn]).enumerate() {
                let mut dc6 = 0.0;
                let mut dc6dcni = 0.0;
                let mut dc6dcnj = 0.0;
                for (c6_vec, (gwvec_ii, gwdcn_ii)) in self.c6.slice(s![*jzp, *izp, ..self.ref_[*jzp], ..self.ref_[*izp]]).axis_iter(Axis(1)).zip(gwvec_i.iter().zip(gwdcn_i.iter())) {
                    for (c6_val, (gwvec_jj, gwdcn_jj)) in c6_vec.iter().zip(gwvec_j.iter().zip(gwdcn_j.iter())){
                        dc6 += gwvec_ii * gwvec_jj * c6_val;
                        dc6dcni += gwdcn_ii * gwvec_jj * c6_val;
                        dc6dcnj += gwvec_ii * gwdcn_jj * c6_val;
                        dc6dcn[[jat, iat]] = dc6dcni;
                        dc6dcn[[iat, jat]] = dc6dcnj;
                    }
                }

                c6[[jat, iat]] = dc6;
                c6[[iat, jat]] = dc6;
                dc6dcn[[jat, iat]] = dc6dcni;
                dc6dcn[[iat, jat]] = dc6dcnj;
            }
        }

        (c6, dc6dcn)
    }
}

fn weight_cn(wf: f64, cn: f64, cnref: f64) -> f64 {
    // cngw
    (-wf * (cn - cnref).powi(2)).exp()
}

#[cfg(test)]
mod tests {
    use approx::AbsDiffEq;
    use ndarray::{array, Array, Array1, Array2, Array4};
    use crate::dftd3::model3::D3Model;
    use crate::model::Molecule;
    use crate::test::get_uracil;
    use crate::dftd3::test3::set_uracil_properties3;
    use crate::defaults::WF_DEFAULT;

    #[test]
    fn setup_model3() -> () {
        let mol: Molecule = get_uracil();
        let disp: D3Model = D3Model::from_molecule(&mol, Some(WF_DEFAULT));

        let epsilon: f64 = 1e-15;

        let rcov_ref: Array1<f64> = array![  1.8897257107723404,  1.7889403395311492,  1.5873695970487660,  0.8062829699295320,];
        let rvdw_ref: Array2<f64> = array![
            [  5.4996687360607428,  5.1141646910631859,  4.8560281589716841,  4.6283162108236162,],
            [  5.1141646910631859,  4.9558056765004634,  4.6952125009849572,  4.4724138396848980,],
            [  4.8560281589716841,  4.6952125009849572,  4.6897322964237178,  4.1135549272092309,],
            [  4.6283162108236162,  4.4724138396848980,  4.1135549272092309,  4.1239484186184789,],
        ].reversed_axes();
        let r4r2_ref: Array1<f64> = array![  3.1049282206129809,  2.7117524212163846,  2.5936168242020377,  2.0073489980568899,];
        let wf_ref: f64 = 4.0000000000000000;
        let ref_ref: Array1<usize> = array![         5,         4,         3,         2,];
        let cn_ref: Array2<f64> = array![
            [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.9118000000000001,],
            [  0.9868000000000000,  0.9944000000000000,  0.9925000000000000,  0.0000000000000000,],
            [  1.9984999999999999,  2.0143000000000000,  1.9886999999999999,  0.0000000000000000,],
            [  2.9986999999999999,  2.9903000000000000,  0.0000000000000000,  0.0000000000000000,],
            [  3.9843999999999999,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
        ].reversed_axes();

        let c6_ref_array: [[[[f64; 4]; 4]; 5]; 5] = [
            [
                [
                    [ 49.1129999999999995, 34.8145999999999987, 26.5929000000000002, 12.1402000000000001,],
                    [ 34.8145999999999987, 25.2684999999999995, 19.6545999999999985,  8.7171000000000003,],
                    [ 26.5929000000000002, 19.6545999999999985, 15.5059000000000005,  6.7180000000000000,],
                    [ 12.1402000000000001,  8.7171000000000003,  6.7180000000000000,  3.0266999999999999,],
                ],
                [
                    [ 46.0681000000000012, 32.4847999999999999, 23.9119999999999990, 19.2652999999999999,],
                    [ 32.7008999999999972, 23.6295000000000002, 17.7698000000000000, 13.5164000000000009,],
                    [ 25.0096999999999987, 18.4128000000000007, 14.0763999999999996, 10.2370999999999999,],
                    [ 11.3932000000000002,  8.1417000000000002,  6.0575000000000001,  4.7378999999999998,],
                ],
                [
                    [ 37.8419000000000025, 30.5305000000000000, 21.1428000000000011,  0.0000000000000000,],
                    [ 27.1704000000000008, 22.2793999999999990, 15.8363999999999994,  0.0000000000000000,],
                    [ 20.9597000000000016, 17.4093000000000018, 12.6277000000000008,  0.0000000000000000,],
                    [  9.4202999999999992,  7.6609999999999996,  5.3716999999999997,  0.0000000000000000,],
                ],
                [
                    [ 35.4129000000000005, 26.9350999999999985,  0.0000000000000000,  0.0000000000000000,],
                    [ 25.4799000000000007, 19.7707000000000015,  0.0000000000000000,  0.0000000000000000,],
                    [ 19.6942999999999984, 15.5249000000000006,  0.0000000000000000,  0.0000000000000000,],
                    [  8.8209999999999997,  6.7746000000000004,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 29.2830000000000013,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 21.4198999999999984,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 16.7544000000000004,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  7.3662000000000001,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
            ],
            [
                [
                    [ 46.0681000000000012, 32.7008999999999972, 25.0096999999999987, 11.3932000000000002,],
                    [ 32.4847999999999999, 23.6295000000000002, 18.4128000000000007,  8.1417000000000002,],
                    [ 23.9119999999999990, 17.7698000000000000, 14.0763999999999996,  6.0575000000000001,],
                    [ 19.2652999999999999, 13.5164000000000009, 10.2370999999999999,  4.7378999999999998,],
                ],
                [
                    [ 43.2451999999999970, 30.5410000000000004, 22.5178000000000011, 18.0575000000000010,],
                    [ 30.5410000000000004, 22.1240999999999985, 16.6774999999999984, 12.5980000000000008,],
                    [ 22.5178000000000011, 16.6774999999999984, 12.8161000000000005,  9.1812000000000005,],
                    [ 18.0575000000000010, 12.5980000000000008,  9.1812000000000005,  7.5915999999999997,],
                ],
                [
                    [ 35.5219000000000023, 28.6937999999999995, 19.9089999999999989,  0.0000000000000000,],
                    [ 25.3826999999999998, 20.8501000000000012, 14.8599999999999994,  0.0000000000000000,],
                    [ 18.9034000000000013, 15.7630999999999997, 11.5008999999999997,  0.0000000000000000,],
                    [ 14.7622999999999998, 11.8214000000000006,  8.0847999999999995,  0.0000000000000000,],
                ],
                [
                    [ 33.2539999999999978, 25.3318000000000012,  0.0000000000000000,  0.0000000000000000,],
                    [ 23.8136000000000010, 18.5180000000000007,  0.0000000000000000,  0.0000000000000000,],
                    [ 17.7749999999999986, 14.0792999999999999,  0.0000000000000000,  0.0000000000000000,],
                    [ 13.7992000000000008, 10.3986999999999998,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 27.5206000000000017,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 20.0468000000000011,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 15.1751000000000005,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 11.3299000000000003,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
            ],
            [
                [
                    [ 37.8419000000000025, 27.1704000000000008, 20.9597000000000016,  9.4202999999999992,],
                    [ 30.5305000000000000, 22.2793999999999990, 17.4093000000000018,  7.6609999999999996,],
                    [ 21.1428000000000011, 15.8363999999999994, 12.6277000000000008,  5.3716999999999997,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 35.5219000000000023, 25.3826999999999998, 18.9034000000000013, 14.7622999999999998,],
                    [ 28.6937999999999995, 20.8501000000000012, 15.7630999999999997, 11.8214000000000006,],
                    [ 19.9089999999999989, 14.8599999999999994, 11.5008999999999997,  8.0847999999999995,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 29.3601999999999990, 23.8964999999999996, 16.7854999999999990,  0.0000000000000000,],
                    [ 23.8964999999999996, 19.6768000000000001, 14.0807000000000002,  0.0000000000000000,],
                    [ 16.7854999999999990, 14.0807000000000002, 10.3707999999999991,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 27.5062999999999995, 21.1488000000000014,  0.0000000000000000,  0.0000000000000000,],
                    [ 22.4279000000000011, 17.4927999999999990,  0.0000000000000000,  0.0000000000000000,],
                    [ 15.8009000000000004, 12.6076999999999995,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 22.9516999999999989,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 18.9172000000000011,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 13.5525000000000002,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
            ],
            [
                [
                    [ 35.4129000000000005, 25.4799000000000007, 19.6942999999999984,  8.8209999999999997,],
                    [ 26.9350999999999985, 19.7707000000000015, 15.5249000000000006,  6.7746000000000004,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 33.2539999999999978, 23.8136000000000010, 17.7749999999999986, 13.7992000000000008,],
                    [ 25.3318000000000012, 18.5180000000000007, 14.0792999999999999, 10.3986999999999998,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 27.5062999999999995, 22.4279000000000011, 15.8009000000000004,  0.0000000000000000,],
                    [ 21.1488000000000014, 17.4927999999999990, 12.6076999999999995,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 25.7808999999999990, 19.8669000000000011,  0.0000000000000000,  0.0000000000000000,],
                    [ 19.8669000000000011, 15.5816999999999997,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 21.5377000000000010,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [ 16.8169000000000004,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
            ],
            [
                [
                    [ 29.2830000000000013, 21.4198999999999984, 16.7544000000000004,  7.3662000000000001,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 27.5206000000000017, 20.0468000000000011, 15.1751000000000005, 11.3299000000000003,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 22.9516999999999989, 18.9172000000000011, 13.5525000000000002,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 21.5377000000000010, 16.8169000000000004,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
                [
                    [ 18.2067000000000014,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                    [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
                ],
            ],
        ];

        let mut c6_ref: Array4<f64> = Array::zeros((5, 5, 4, 4));
        for i in 0..5 {
            for j in 0..5 {
                for k in 0..4 {
                    for l in 0..4 {
                        c6_ref[[i, j, k, l]] = c6_ref_array[i][j][k][l];
                    }
                }
            }
        }
        let c6_ref: Array4<f64> = c6_ref.reversed_axes();

        assert!(disp.rcov.abs_diff_eq(&rcov_ref, epsilon));
        assert!(disp.rvdw.abs_diff_eq(&rvdw_ref, epsilon));
        assert!(disp.r4r2.abs_diff_eq(&r4r2_ref, epsilon));
        assert!(disp.wf.abs_diff_eq(&wf_ref, epsilon));
        assert_eq!(disp.ref_, ref_ref);
        assert!(disp.cn.abs_diff_eq(&cn_ref, epsilon));
        assert!(disp.c6.abs_diff_eq(&c6_ref, epsilon));
    }

    #[test]
    fn weight_reference3_wr() -> () {
        let mut mol = get_uracil();
        let disp: D3Model = D3Model::from_molecule(&mol, None);
        set_uracil_properties3(&mut mol);
        disp.weight_references(&mut mol);

        let mut gwvec: Array2<f64> = Array::zeros((mol.n_atoms, 5));
        for (mut gwvec_i, gw_list) in gwvec.outer_iter_mut().zip(mol.atomlist.gaussian_weight.iter()) {
            gwvec_i.assign(gw_list);
        }

        println!("{:20.16}", gwvec);

        let gwvec_ref_array: [[f64; 24]; 5] = [
            [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0088083722197372,  0.0095993078212439,
                0.9823245729485065,  0.9822880247274957,  0.9818873224814714,  0.9817878346492054,
                0.9818886167991754,  0.0000000000000000,  0.0088107988815100,  0.0000000000000000,
                0.0000000000000000,  0.9817866124453927,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.9822906756459758,  0.9823206487543154,  0.0095911512309067,],
            [  0.0000000067840293,  0.0000000068697263,  0.0000000069846383,  0.0000000127283103,
                0.0000000053799919,  0.0000000078308906,  0.9532185902464581,  0.9554071773951260,
                0.0176754270514936,  0.0177119752725043,  0.0181126775185286,  0.0182121653507946,
                0.0181113832008247,  0.0000000068593589,  0.9532260646109619,  0.0000000067831036,
                0.0000000069992902,  0.0182133875546074,  0.0000000078039968,  0.0000000127946778,
                0.0000000053731960,  0.0177093243540242,  0.0176793512456846,  0.9553869493008852,],
            [  0.0047955771371264,  0.0048264853426931,  0.0048676278185032,  0.0073586853254221,
                0.0042580157836953,  0.0058074703829110,  0.0379730375338048,  0.0349935147836302,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0048227565130541,  0.0379631365075280,  0.0047952422079599,
                0.0048728491452919,  0.0000000000000000,  0.0057977377901358,  0.0073773522230139,
                0.0042552523234107,  0.0000000000000000,  0.0000000000000000,  0.0350218994682081,],
            [  0.9289174833505881,  0.9292571092580930,  0.9297028026847286,  0.9926413019462675,
                0.9222702380507101,  0.9941925217861983,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.9292163563035818,  0.0000000000000000,  0.9289137802256715,
                0.9297588504928718,  0.0000000000000000,  0.9942022544058674,  0.9926226349823084,
                0.9222320269119068,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
            [  0.0662869327282562,  0.0659163985294876,  0.0654295625121299,  0.0000000000000000,
                0.0734717407856027,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0659608803240052,  0.0000000000000000,  0.0662909707832649,
                0.0653682933625460,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0735127153914865,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
        ];

        let mut gwvec_ref: Array2<f64> = Array::zeros((5, 24));
        for i in 0..5 {
            for j in 0..24 {
                gwvec_ref[[i, j]] = gwvec_ref_array[i][j];
            }
        }
        let gwvec_ref: Array2<f64> = gwvec_ref.reversed_axes();

        assert!(gwvec.abs_diff_eq(&gwvec_ref, 1e-15));
    }

    #[test]
    fn weight_reference3_derivative() -> () {
        let mut mol = get_uracil();
        let disp: D3Model = D3Model::from_molecule(&mol, None);
        set_uracil_properties3(&mut mol);
        disp.weight_references_grad(&mut mol);

        let mut gwvec: Array2<f64> = Array::zeros((mol.n_atoms, 5));
        let mut gwdcn: Array2<f64> = Array::zeros((mol.n_atoms, 5));
        for i in 0..24 {
            gwvec.row_mut(i).assign(&mol.atomlist.gaussian_weight[i]);
            gwdcn.row_mut(i).assign(&mol.atomlist.gaussian_weight_dcn[i]);
        }

        let gwvec_ref_array: [[f64; 24]; 5] = [
            [  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0088083722197372,  0.0095993078212439,
                0.9823245729485064,  0.9822880247274957,  0.9818873224814714,  0.9817878346492054,
                0.9818886167991752,  0.0000000000000000,  0.0088107988815100,  0.0000000000000000,
                0.0000000000000000,  0.9817866124453927,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.9822906756459758,  0.9823206487543154,  0.0095911512309067,],
            [  0.0000000067840293,  0.0000000068697263,  0.0000000069846383,  0.0000000127283103,
                0.0000000053799919,  0.0000000078308906,  0.9532185902464579,  0.9554071773951260,
                0.0176754270514935,  0.0177119752725043,  0.0181126775185286,  0.0182121653507946,
                0.0181113832008247,  0.0000000068593589,  0.9532260646109619,  0.0000000067831036,
                0.0000000069992902,  0.0182133875546074,  0.0000000078039968,  0.0000000127946778,
                0.0000000053731960,  0.0177093243540242,  0.0176793512456846,  0.9553869493008852,],
            [  0.0047955771371264,  0.0048264853426931,  0.0048676278185032,  0.0073586853254221,
                0.0042580157836952,  0.0058074703829110,  0.0379730375338049,  0.0349935147836302,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0048227565130542,  0.0379631365075280,  0.0047952422079599,
                0.0048728491452919,  0.0000000000000000,  0.0057977377901358,  0.0073773522230139,
                0.0042552523234107,  0.0000000000000000,  0.0000000000000000,  0.0350218994682081,],
            [  0.9289174833505881,  0.9292571092580930,  0.9297028026847282,  0.9926413019462675,
                0.9222702380507098,  0.9941925217861984,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.9292163563035820,  0.0000000000000000,  0.9289137802256711,
                0.9297588504928718,  0.0000000000000000,  0.9942022544058675,  0.9926226349823084,
                0.9222320269119068,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
            [  0.0662869327282562,  0.0659163985294876,  0.0654295625121303,  0.0000000000000000,
                0.0734717407856029,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0659608803240047,  0.0000000000000000,  0.0662909707832654,
                0.0653682933625460,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0735127153914865,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
        ];

        let mut gwvec_ref: Array2<f64> = Array::zeros((5, 24));
        for i in 0..5 {
            for j in 0..24 {
                gwvec_ref[[i, j]] = gwvec_ref_array[i][j];
            }
        }
        let gwvec_ref: Array2<f64> = gwvec_ref.reversed_axes();

        let gwdcn_ref_array: [[f64; 24]; 5] = [
            [ -0.0000000000000001, -0.0000000000000001, -0.0000000000000001, -0.0000000000000002,
                -0.0000000000000001, -0.0000000000000001, -0.0719881082802589, -0.0781639556083690,
                0.1266527133738499,  0.1269098765297435,  0.1297280477437434,  0.1304273907020682,
                0.1297189484738597, -0.0000000000000001, -0.0720070756387503, -0.0000000000000001,
                -0.0000000000000001,  0.1304359812028867, -0.0000000000000001, -0.0000000000000002,
                -0.0000000000000001,  0.1268912246066861,  0.1266803259980817, -0.0781003300322281,],
            [ -0.0000001124760839, -0.0000001138751293, -0.0000001157508403, -0.0000002025041478,
                -0.0000000895257430, -0.0000001246823054, -0.2218058106931806, -0.1936283707467242,
                -0.1266527133738500, -0.1269098765297436, -0.1297280477437433, -0.1304273907020682,
                -0.1297189484738598, -0.0000001137058870, -0.2217139670274215, -0.0000001124609708,
                -0.0000001159899795, -0.1304359812028867, -0.0000001242546991, -0.0000002035581725,
                -0.0000000894145106, -0.1268912246066860, -0.1266803259980817, -0.1939022677008547,],
            [ -0.0406949790717984, -0.0409419681427670, -0.0412706810745080, -0.0570338083755471,
                -0.0363928254506680, -0.0450813898543829,  0.2937939189734394,  0.2717923263550933,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000, -0.0409121728889439,  0.2937210426661717, -0.0406923024266507,
                -0.0413123927569166,  0.0000000000000000, -0.0450062796776591, -0.0571774117061141,
                -0.0363706754430937,  0.0000000000000000,  0.0000000000000000,  0.2720025977330827,],
            [ -0.4499117429473355, -0.4471312347862914, -0.4434705006827387,  0.0570340108796950,
                -0.5029118704393705,  0.0450815145366885,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000, -0.4474652876448704,  0.0000000000000000, -0.4499420177751731,
                -0.4430091836231679,  0.0000000000000000,  0.0450064039323588,  0.0571776152642869,
                -0.5032094083759353,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
            [  0.4906068344952176,  0.4880733168041879,  0.4847412975080871,  0.0000000000000000,
                0.5393047854157815,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.0000000000000000,  0.4883775742397011,  0.0000000000000000,  0.4906344326627947,
                0.4843216923700641,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,
                0.5395801732335396,  0.0000000000000000,  0.0000000000000000,  0.0000000000000000,],
        ];

        let mut gwdcn_ref: Array2<f64> = Array::zeros((5, 24));
        for i in 0..5 {
            for j in 0..24 {
                gwdcn_ref[[i, j]] = gwdcn_ref_array[i][j];
            }
        }
        let gwdcn_ref: Array2<f64> = gwdcn_ref.reversed_axes();

        println!("{:20.16}", gwdcn);

        assert!(gwvec.abs_diff_eq(&gwvec_ref, 1e-15));
        assert!(gwdcn.abs_diff_eq(&gwdcn_ref, 1e-14));
    }

    #[test]
    fn atomic_c6() -> () {
        let mut mol = get_uracil();
        let disp: D3Model = D3Model::from_molecule(&mol, None);
        set_uracil_properties3(&mut mol);
        disp.weight_references_grad(&mut mol);

        let c6: Array2<f64> = disp.get_atomic_c6(&mol);

        let c6_ref_array: [[f64; 24]; 24] = [
            [ 25.2387243967261412, 25.2403275064047889, 25.2424347027034948, 19.6894998514722523,
                25.2077447793082605, 19.6855731536442349, 17.5506811481299572, 17.5579963928278602,
                8.8142737865756882,  8.8144533368949212,  8.8164218654362028,  8.8169106189664586,
                8.8164155068460843, 25.2401350253778745, 17.5507050742764932, 25.2387069294032358,
                25.2426999711230309,  8.8169166232829106, 19.6855485168729700, 19.6895471043120729,
                25.2075686194952837,  8.8144403137368528,  8.8142930649509470, 17.5579255239337257,],
            [ 25.2403275064047889, 25.2419307485799784, 25.2440381190263246, 19.6906709011084402,
                25.2093453271970773, 19.6867439295272746, 17.5516754097201719, 17.5589911587148713,
                8.8148382063040778,  8.8150177707730126,  8.8169864544467664,  8.8174752464938830,
                8.8169800953555519, 25.2417382516449607, 17.5516993375162365, 25.2403100376381744,
                25.2443034093678342,  8.8174812512835139, 19.6867192910384468, 19.6907181572425287,
                25.2091691528104107,  8.8150047465886363,  8.8148574861985942, 17.5589202849355637,],
            [ 25.2424347027034948, 25.2440381190263246, 25.2461457183647049, 19.6922101991039789,
                25.2114491563922485, 19.6882828676907735, 17.5529823453277309, 17.5602987571920153,
                8.8155801066936945,  8.8157596897606645,  8.8177285773369505,  8.8182174200097414,
                8.8177222175871091, 25.2438456011823931, 17.5530062752920166, 25.2424172320393225,
                25.2464110375194899,  8.8182234254213103, 19.6882582269442885, 19.6922574595681965,
                25.2112729628505683,  8.8157466642273370,  8.8155993885850865, 17.5602278769914122,],
            [ 19.6894998514722523, 19.6906709011084402, 19.6922101991039789, 15.6098412194811154,
                19.6668719831614318, 15.6068735630737745, 14.0484969464432830, 14.0540307780534715,
                6.8452500268556795,  6.8453826255000303,  6.8468363918706574,  6.8471973383496696,
                6.8468316960258759, 19.6905302956686015, 14.0485150437165665, 19.6894870919039278,
                19.6924039781945446,  6.8472017725619025, 15.6068549434917703, 15.6098769314708701,
                19.6667433253896498,  6.8453730078445894,  6.8452642640145758, 14.0539771599134955,],
            [ 25.2077447793082605, 25.2093453271970773, 25.2114491563922485, 19.6668719831614318,
                25.1768146935811856, 19.6629505756304397, 17.5314714434545493, 17.5387769427883597,
                8.8033668709780422,  8.8035461477501045,  8.8055116772134028,  8.8059996861215133,
                8.8055053283106783, 25.2091531537496252, 17.5314953377244152, 25.2077273398991615,
                25.2117140009557481,  8.8060056812903138, 19.6629259720514007, 19.6669191723392274,
                25.1766388155479248,  8.8035331444329810,  8.8033861199824521, 17.5387061682987166,],
            [ 19.6855731536442349, 19.6867439295272746, 19.6882828676907735, 15.6068735630737745,
                19.6629505756304397, 15.6039065633433136, 14.0458946741520627, 14.0514272853453601,
                6.8438603186826255,  6.8439928869217574,  6.8454463199399109,  6.8458071836529415,
                6.8454416251718992, 19.6866033569562049, 14.0459127674326130, 19.6855603970587012,
                19.6884766014832628,  6.8458116168483967, 15.6038879478814128, 15.6069092671612548,
                19.6628219479414312,  6.8439832714716688,  6.8438745525769038, 14.0513736790252413,],
            [ 17.5506811481299572, 17.5516754097201719, 17.5529823453277309, 14.0484969464432830,
                17.5314714434545493, 14.0458946741520627, 12.7386088317839246, 12.7435040466425438,
                6.0922747222331592,  6.0923884453524195,  6.0936352668953644,  6.0939448323489183,
                6.0936312395079169, 17.5515560302094897, 12.7386248453007997, 17.5506703148816889,
                17.5531468742940753,  6.0939486353474273, 14.0458783470523034, 14.0485282614976121,
                17.5313622312079929,  6.0923801967780671,  6.0922869327208833, 12.7434566306796935,],
            [ 17.5579963928278602, 17.5589911587148713, 17.5602987571920153, 14.0540307780534715,
                17.5387769427883597, 14.0514272853453601, 12.7435040466425438, 12.7484016397997699,
                6.0948676436180440,  6.0949814228800498,  6.0962288599529249,  6.0965385782325212,
                6.0962248305772375, 17.5588717186546326, 12.7435200679553766, 17.5579855540848264,
                17.5604633696049710,  6.0965423831084902, 14.0514109505884992, 14.0540621077939747,
                17.5386676751267139,  6.0949731702335459,  6.0948798601338314, 12.7483542008493700,],
            [  8.8142737865756882,  8.8148382063040778,  8.8155801066936945,  6.8452500268556795,
                8.8033668709780422,  6.8438603186826255,  6.0922747222331592,  6.0948676436180440,
                3.0875493222152914,  3.0876126015922707,  3.0883063751271091,  3.0884786277804182,
                3.0883041341529762,  8.8147704378621494,  6.0922832039836869,  8.8142676367248267,
                8.8156735024678614,  3.0884807438969815,  6.8438515994167561,  6.8452667502351243,
                8.8033048524468445,  3.0876080118074554,  3.0875561165422569,  6.0948425269654312,],
            [  8.8144533368949212,  8.8150177707730126,  8.8157596897606645,  6.8453826255000303,
                8.8035461477501045,  6.8439928869217574,  6.0923884453524195,  6.0949814228800498,
                3.0876126015922707,  3.0876758824953696,  3.0883696727620689,  3.0885419295696259,
                3.0883674317338894,  8.8149500006321979,  6.0923969272865977,  8.8144471868898844,
                8.8158530878760057,  3.0885440457372240,  6.8439841674651198,  6.8453993492453638,
                8.8034841276629034,  3.0876712925998619,  3.0876193960830958,  6.0949563056836045,],
            [  8.8164218654362028,  8.8169864544467664,  8.8177285773369505,  6.8468363918706574,
                8.8055116772134028,  6.8454463199399109,  6.0936352668953644,  6.0962288599529249,
                3.0883063751271091,  3.0883696727620689,  3.0890636464711845,  3.0892359488245011,
                3.0890614048504634,  8.8169186656799692,  6.0936437508430172,  8.8164157137408186,
                8.8178220011201134,  3.0892380655516267,  6.8454375983917615,  6.8468531196274629,
                8.8054496400666640,  3.0883650816529635,  3.0883131714144403,  6.0962037367940844,],
            [  8.8169106189664586,  8.8174752464938830,  8.8182174200097414,  6.8471973383496696,
                8.8059996861215133,  6.8458071836529415,  6.0939448323489183,  6.0965385782325212,
                3.0884786277804182,  3.0885419295696259,  3.0892359488245011,  3.0894082624860881,
                3.0892337070566622,  8.8174074531025610,  6.0939533167964841,  8.8169044668513887,
                8.8183108501658083,  3.0894103793521350,  6.8457984615855043,  6.8472140671024597,
                8.8059376447391688,  3.0885373381592052,  3.0884854245137925,  6.0965134535933148,],
            [  8.8164155068460843,  8.8169800953555519,  8.8177222175871091,  6.8468316960258759,
                8.8055053283106783,  6.8454416251718992,  6.0936312395079169,  6.0962248305772375,
                3.0883041341529762,  3.0883674317338894,  3.0890614048504634,  3.0892337070566622,
                3.0890591632316560,  8.8169123066489199,  6.0936397234490647,  8.8164093551561624,
                8.8178156412873605,  3.0892358237819799,  6.8454329036305062,  6.8468484237697256,
                8.8054432912190439,  3.0883628406287045,  3.0883109304345031,  6.0961997074376564,],
            [ 25.2401350253778745, 25.2417382516449607, 25.2438456011823931, 19.6905302956686015,
                25.2091531537496252, 19.6866033569562049, 17.5515560302094897, 17.5588717186546326,
                8.8147704378621494,  8.8149500006321979,  8.8169186656799692,  8.8174074531025610,
                8.8169123066489199, 25.2415457566199350, 17.5515799578074976, 25.2401175567845932,
                25.2441108888918571,  8.8174134578353822, 19.6865787186736014, 19.6905775514071593,
                25.2089769811127304,  8.8149369765710439,  8.8147897175742518, 17.5588008454618745,],
            [ 17.5507050742764932, 17.5516993375162365, 17.5530062752920166, 14.0485150437165665,
                17.5314953377244152, 14.0459127674326130, 12.7386248453007997, 12.7435200679553766,
                6.0922832039836869,  6.0923969272865977,  6.0936437508430172,  6.0939533167964841,
                6.0936397234490647, 17.5515799578074976, 12.7386408588432367, 17.5506942410102482,
                17.5531708045313124,  6.0939571198011340, 14.0458964403078053, 14.0485463588189425,
                17.5313861252965957,  6.0923886786989252,  6.0922954144911303, 12.7434726519171804,],
            [ 25.2387069294032358, 25.2403100376381744, 25.2424172320393225, 19.6894870919039278,
                25.2077273398991615, 19.6855603970587012, 17.5506703148816889, 17.5579855540848264,
                8.8142676367248267,  8.8144471868898844,  8.8164157137408186,  8.8169044668513887,
                8.8164093551561624, 25.2401175567845932, 17.5506942410102482, 25.2386894620960618,
                25.2426825002199955,  8.8169104711626911, 19.6855357603061556, 19.6895343447078552,
                25.2075511802449803,  8.8144341637430017,  8.8142869150835335, 17.5579146852439187,],
            [ 25.2426999711230309, 25.2443034093678342, 25.2464110375194899, 19.6924039781945446,
                25.2117140009557481, 19.6884766014832628, 17.5531468742940753, 17.5604633696049710,
                8.8156735024678614,  8.8158530878760057,  8.8178220011201134,  8.8183108501658083,
                8.8178156412873605, 25.2441108888918571, 17.5531708045313124, 25.2426825002199955,
                25.2466763603013327,  8.8183168556556648, 19.6884519604525714, 19.6924512392038658,
                25.2115378050028092,  8.8158400621728656,  8.8156927846106274, 17.5603924885960154,],
            [  8.8169166232829106,  8.8174812512835139,  8.8182234254213103,  6.8472017725619025,
                8.8060056812903138,  6.8458116168483967,  6.0939486353474273,  6.0965423831084902,
                3.0884807438969815,  3.0885440457372240,  3.0892380655516267,  3.0894103793521350,
                3.0892358237819799,  8.8174134578353822,  6.0939571198011340,  8.8169104711626911,
                8.8183168556556648,  3.0894124962198890,  6.8458028947745815,  6.8472185013269282,
                8.8059436398559363,  3.0885394543231008,  3.0884875406358341,  6.0965172584510983,],
            [ 19.6855485168729700, 19.6867192910384468, 19.6882582269442885, 15.6068549434917703,
                19.6629259720514007, 15.6038879478814128, 14.0458783470523034, 14.0514109505884992,
                6.8438515994167561,  6.8439841674651198,  6.8454375983917615,  6.8457984615855043,
                6.8454329036305062, 19.6865787186736014, 14.0458964403078053, 19.6855357603061556,
                19.6884519604525714,  6.8458028947745815, 15.6038693324453597, 15.6068906475296707,
                19.6627973445511408,  6.8439745520288673,  6.8438658332905504, 14.0513573443425432,],
            [ 19.6895471043120729, 19.6907181572425287, 19.6922574595681965, 15.6098769314708701,
                19.6669191723392274, 15.6069092671612548, 14.0485282614976121, 14.0540621077939747,
                6.8452667502351243,  6.8453993492453638,  6.8468531196274629,  6.8472140671024597,
                6.8468484237697256, 19.6905775514071593, 14.0485463588189425, 19.6895343447078552,
                19.6924512392038658,  6.8472185013269282, 15.6068906475296707, 15.6099126435557203,
                19.6667905142054380,  6.8453897315633814,  6.8452809874333038, 14.0540084895117641,],
            [ 25.2075686194952837, 25.2091691528104107, 25.2112729628505683, 19.6667433253896498,
                25.1766388155479248, 19.6628219479414312, 17.5313622312079929, 17.5386676751267139,
                8.8033048524468445,  8.8034841276629034,  8.8054496400666640,  8.8059376447391688,
                8.8054432912190439, 25.2089769811127304, 17.5313861252965957, 25.2075511802449803,
                25.2115378050028092,  8.8059436398559363, 19.6627973445511408, 19.6667905142054380,
                25.1764629391176662,  8.8034711244586408,  8.8033241012841863, 17.5385969011738858,],
            [  8.8144403137368528,  8.8150047465886363,  8.8157466642273370,  6.8453730078445894,
                8.8035331444329810,  6.8439832714716688,  6.0923801967780671,  6.0949731702335459,
                3.0876080118074554,  3.0876712925998619,  3.0883650816529635,  3.0885373381592052,
                3.0883628406287045,  8.8149369765710439,  6.0923886786989252,  8.8144341637430017,
                8.8158400621728656,  3.0885394543231008,  6.8439745520288673,  6.8453897315633814,
                8.8034711244586408,  3.0876667027123821,  3.0876148062863953,  6.0949480530765472,],
            [  8.8142930649509470,  8.8148574861985942,  8.8155993885850865,  6.8452642640145758,
                8.8033861199824521,  6.8438745525769038,  6.0922869327208833,  6.0948798601338314,
                3.0875561165422569,  3.0876193960830958,  3.0883131714144403,  3.0884854245137925,
                3.0883109304345031,  8.8147897175742518,  6.0922954144911303,  8.8142869150835335,
                8.8156927846106274,  3.0884875406358341,  6.8438658332905504,  6.8452809874333038,
                8.8033241012841863,  3.0876148062863953,  3.0875629108868154,  6.0948547434228288,],
            [ 17.5579255239337257, 17.5589202849355637, 17.5602278769914122, 14.0539771599134955,
                17.5387061682987166, 14.0513736790252413, 12.7434566306796935, 12.7483542008493700,
                6.0948425269654312,  6.0949563056836045,  6.0962037367940844,  6.0965134535933148,
                6.0961997074376564, 17.5588008454618745, 12.7434726519171804, 17.5579146852439187,
                17.5603924885960154,  6.0965172584510983, 14.0513573443425432, 14.0540084895117641,
                17.5385969011738858,  6.0949480530765472,  6.0948547434228288, 12.7483067621211834,],
        ];

        let mut c6_ref: Array2<f64> = Array::zeros((24, 24));
        for i in 0..24 {
            for j in 0..24 {
                c6_ref[[i, j]] = c6_ref_array[i][j];
            }
        }
        let c6_ref: Array2<f64> = c6_ref.reversed_axes();

        let c6_diff: Array2<f64> = &c6 - &c6_ref;
        println!("{:?}", c6_diff);

        let mut max_diff = 0.0;
        for i in 0..24 {
            for j in 0..24 {
                if c6_diff[[i, j]].abs() > max_diff {
                    max_diff = c6_diff[[i, j]].abs();
                }
            }
        }

        println!("{:20.16}", c6);
        assert!(c6.abs_diff_eq(&c6_ref, 1e-13));
    }

    #[test]
    fn atomic_c6_derivative() -> () {
        let mut mol = get_uracil();
        let disp: D3Model = D3Model::from_molecule(&mol, None);
        set_uracil_properties3(&mut mol);
        disp.weight_references_grad(&mut mol);

        let (c6, dc6dcn): (Array2<f64>, Array2<f64>) = disp.get_atomic_c6_grad(&mol);

        let c6_ref_array: [[f64; 24]; 24] = [
            [ 25.2387243967261377, 25.2403275064047854, 25.2424347027034948, 19.6894998514722523,
                25.2077447793082570, 19.6855731536442313, 17.5506811481299572, 17.5579963928278566,
                8.8142737865756882,  8.8144533368949212,  8.8164218654362045,  8.8169106189664568,
                8.8164155068460843, 25.2401350253778674, 17.5507050742764896, 25.2387069294032358,
                25.2426999711230309,  8.8169166232829106, 19.6855485168729700, 19.6895471043120764,
                25.2075686194952766,  8.8144403137368528,  8.8142930649509470, 17.5579255239337293,],
            [ 25.2403275064047854, 25.2419307485799784, 25.2440381190263281, 19.6906709011084402,
                25.2093453271970773, 19.6867439295272781, 17.5516754097201719, 17.5589911587148713,
                8.8148382063040760,  8.8150177707730109,  8.8169864544467664,  8.8174752464938813,
                8.8169800953555519, 25.2417382516449607, 17.5516993375162365, 25.2403100376381744,
                25.2443034093678342,  8.8174812512835139, 19.6867192910384432, 19.6907181572425323,
                25.2091691528104107,  8.8150047465886363,  8.8148574861985942, 17.5589202849355637,],
            [ 25.2424347027034948, 25.2440381190263281, 25.2461457183647084, 19.6922101991039824,
                25.2114491563922485, 19.6882828676907735, 17.5529823453277309, 17.5602987571920117,
                8.8155801066936945,  8.8157596897606663,  8.8177285773369523,  8.8182174200097414,
                8.8177222175871073, 25.2438456011823931, 17.5530062752920166, 25.2424172320393225,
                25.2464110375194899,  8.8182234254213121, 19.6882582269442885, 19.6922574595682001,
                25.2112729628505754,  8.8157466642273370,  8.8155993885850865, 17.5602278769914122,],
            [ 19.6894998514722523, 19.6906709011084402, 19.6922101991039824, 15.6098412194811154,
                19.6668719831614318, 15.6068735630737745, 14.0484969464432830, 14.0540307780534697,
                6.8452500268556786,  6.8453826255000303,  6.8468363918706574,  6.8471973383496687,
                6.8468316960258759, 19.6905302956686015, 14.0485150437165665, 19.6894870919039278,
                19.6924039781945446,  6.8472017725619034, 15.6068549434917685, 15.6098769314708736,
                19.6667433253896498,  6.8453730078445894,  6.8452642640145758, 14.0539771599134955,],
            [ 25.2077447793082570, 25.2093453271970773, 25.2114491563922485, 19.6668719831614318,
                25.1768146935811892, 19.6629505756304397, 17.5314714434545493, 17.5387769427883597,
                8.8033668709780404,  8.8035461477501045,  8.8055116772134028,  8.8059996861215115,
                8.8055053283106783, 25.2091531537496216, 17.5314953377244116, 25.2077273398991615,
                25.2117140009557446,  8.8060056812903138, 19.6629259720514007, 19.6669191723392274,
                25.1766388155479213,  8.8035331444329810,  8.8033861199824521, 17.5387061682987166,],
            [ 19.6855731536442313, 19.6867439295272781, 19.6882828676907735, 15.6068735630737745,
                19.6629505756304397, 15.6039065633433136, 14.0458946741520627, 14.0514272853453619,
                6.8438603186826263,  6.8439928869217574,  6.8454463199399109,  6.8458071836529406,
                6.8454416251718992, 19.6866033569562049, 14.0459127674326130, 19.6855603970587012,
                19.6884766014832628,  6.8458116168483985, 15.6038879478814110, 15.6069092671612584,
                19.6628219479414312,  6.8439832714716697,  6.8438745525769047, 14.0513736790252430,],
            [ 17.5506811481299572, 17.5516754097201719, 17.5529823453277309, 14.0484969464432830,
                17.5314714434545493, 14.0458946741520627, 12.7386088317839246, 12.7435040466425420,
                6.0922747222331601,  6.0923884453524195,  6.0936352668953644,  6.0939448323489183,
                6.0936312395079169, 17.5515560302094897, 12.7386248453007997, 17.5506703148816889,
                17.5531468742940753,  6.0939486353474273, 14.0458783470523016, 14.0485282614976157,
                17.5313622312079929,  6.0923801967780671,  6.0922869327208833, 12.7434566306796935,],
            [ 17.5579963928278566, 17.5589911587148713, 17.5602987571920117, 14.0540307780534697,
                17.5387769427883597, 14.0514272853453619, 12.7435040466425420, 12.7484016397997664,
                6.0948676436180422,  6.0949814228800490,  6.0962288599529249,  6.0965385782325194,
                6.0962248305772375, 17.5588717186546326, 12.7435200679553748, 17.5579855540848229,
                17.5604633696049710,  6.0965423831084902, 14.0514109505884974, 14.0540621077939747,
                17.5386676751267139,  6.0949731702335450,  6.0948798601338297, 12.7483542008493718,],
            [  8.8142737865756882,  8.8148382063040760,  8.8155801066936945,  6.8452500268556786,
                8.8033668709780404,  6.8438603186826263,  6.0922747222331601,  6.0948676436180422,
                3.0875493222152901,  3.0876126015922702,  3.0883063751271087,  3.0884786277804182,
                3.0883041341529762,  8.8147704378621476,  6.0922832039836861,  8.8142676367248267,
                8.8156735024678596,  3.0884807438969815,  6.8438515994167535,  6.8452667502351243,
                8.8033048524468427,  3.0876080118074545,  3.0875561165422560,  6.0948425269654312,],
            [  8.8144533368949212,  8.8150177707730109,  8.8157596897606663,  6.8453826255000303,
                8.8035461477501045,  6.8439928869217574,  6.0923884453524195,  6.0949814228800490,
                3.0876126015922702,  3.0876758824953696,  3.0883696727620684,  3.0885419295696259,
                3.0883674317338889,  8.8149500006321961,  6.0923969272865977,  8.8144471868898826,
                8.8158530878760057,  3.0885440457372235,  6.8439841674651190,  6.8453993492453655,
                8.8034841276629034,  3.0876712925998615,  3.0876193960830958,  6.0949563056836045,],
            [  8.8164218654362045,  8.8169864544467664,  8.8177285773369523,  6.8468363918706574,
                8.8055116772134028,  6.8454463199399109,  6.0936352668953644,  6.0962288599529249,
                3.0883063751271087,  3.0883696727620684,  3.0890636464711845,  3.0892359488245011,
                3.0890614048504634,  8.8169186656799692,  6.0936437508430172,  8.8164157137408186,
                8.8178220011201134,  3.0892380655516267,  6.8454375983917615,  6.8468531196274647,
                8.8054496400666640,  3.0883650816529635,  3.0883131714144403,  6.0962037367940844,],
            [  8.8169106189664568,  8.8174752464938813,  8.8182174200097414,  6.8471973383496687,
                8.8059996861215115,  6.8458071836529406,  6.0939448323489183,  6.0965385782325194,
                3.0884786277804182,  3.0885419295696259,  3.0892359488245011,  3.0894082624860886,
                3.0892337070566618,  8.8174074531025592,  6.0939533167964841,  8.8169044668513905,
                8.8183108501658083,  3.0894103793521355,  6.8457984615855025,  6.8472140671024606,
                8.8059376447391671,  3.0885373381592052,  3.0884854245137920,  6.0965134535933139,],
            [  8.8164155068460843,  8.8169800953555519,  8.8177222175871073,  6.8468316960258759,
                8.8055053283106783,  6.8454416251718992,  6.0936312395079169,  6.0962248305772375,
                3.0883041341529762,  3.0883674317338889,  3.0890614048504634,  3.0892337070566618,
                3.0890591632316560,  8.8169123066489199,  6.0936397234490647,  8.8164093551561624,
                8.8178156412873605,  3.0892358237819799,  6.8454329036305062,  6.8468484237697265,
                8.8054432912190439,  3.0883628406287045,  3.0883109304345031,  6.0961997074376564,],
            [ 25.2401350253778674, 25.2417382516449607, 25.2438456011823931, 19.6905302956686015,
                25.2091531537496216, 19.6866033569562049, 17.5515560302094897, 17.5588717186546326,
                8.8147704378621476,  8.8149500006321961,  8.8169186656799692,  8.8174074531025592,
                8.8169123066489199, 25.2415457566199350, 17.5515799578074976, 25.2401175567845932,
                25.2441108888918571,  8.8174134578353822, 19.6865787186735979, 19.6905775514071628,
                25.2089769811127304,  8.8149369765710439,  8.8147897175742518, 17.5588008454618745,],
            [ 17.5507050742764896, 17.5516993375162365, 17.5530062752920166, 14.0485150437165665,
                17.5314953377244116, 14.0459127674326130, 12.7386248453007997, 12.7435200679553748,
                6.0922832039836861,  6.0923969272865977,  6.0936437508430172,  6.0939533167964841,
                6.0936397234490647, 17.5515799578074976, 12.7386408588432367, 17.5506942410102482,
                17.5531708045313124,  6.0939571198011349, 14.0458964403078035, 14.0485463588189443,
                17.5313861252965957,  6.0923886786989252,  6.0922954144911303, 12.7434726519171804,],
            [ 25.2387069294032358, 25.2403100376381744, 25.2424172320393225, 19.6894870919039278,
                25.2077273398991615, 19.6855603970587012, 17.5506703148816889, 17.5579855540848229,
                8.8142676367248267,  8.8144471868898826,  8.8164157137408186,  8.8169044668513905,
                8.8164093551561624, 25.2401175567845932, 17.5506942410102482, 25.2386894620960618,
                25.2426825002199955,  8.8169104711626911, 19.6855357603061520, 19.6895343447078552,
                25.2075511802449803,  8.8144341637430017,  8.8142869150835335, 17.5579146852439187,],
            [ 25.2426999711230309, 25.2443034093678342, 25.2464110375194899, 19.6924039781945446,
                25.2117140009557446, 19.6884766014832628, 17.5531468742940753, 17.5604633696049710,
                8.8156735024678596,  8.8158530878760057,  8.8178220011201134,  8.8183108501658083,
                8.8178156412873605, 25.2441108888918571, 17.5531708045313124, 25.2426825002199955,
                25.2466763603013327,  8.8183168556556666, 19.6884519604525714, 19.6924512392038693,
                25.2115378050028092,  8.8158400621728656,  8.8156927846106274, 17.5603924885960154,],
            [  8.8169166232829106,  8.8174812512835139,  8.8182234254213121,  6.8472017725619034,
                8.8060056812903138,  6.8458116168483985,  6.0939486353474273,  6.0965423831084902,
                3.0884807438969815,  3.0885440457372235,  3.0892380655516267,  3.0894103793521355,
                3.0892358237819799,  8.8174134578353822,  6.0939571198011349,  8.8169104711626911,
                8.8183168556556666,  3.0894124962198886,  6.8458028947745806,  6.8472185013269300,
                8.8059436398559328,  3.0885394543231013,  3.0884875406358345,  6.0965172584510974,],
            [ 19.6855485168729700, 19.6867192910384432, 19.6882582269442885, 15.6068549434917685,
                19.6629259720514007, 15.6038879478814110, 14.0458783470523016, 14.0514109505884974,
                6.8438515994167535,  6.8439841674651190,  6.8454375983917615,  6.8457984615855025,
                6.8454329036305062, 19.6865787186735979, 14.0458964403078035, 19.6855357603061520,
                19.6884519604525714,  6.8458028947745806, 15.6038693324453579, 15.6068906475296725,
                19.6627973445511373,  6.8439745520288664,  6.8438658332905495, 14.0513573443425415,],
            [ 19.6895471043120764, 19.6907181572425323, 19.6922574595682001, 15.6098769314708736,
                19.6669191723392274, 15.6069092671612584, 14.0485282614976157, 14.0540621077939747,
                6.8452667502351243,  6.8453993492453655,  6.8468531196274647,  6.8472140671024606,
                6.8468484237697265, 19.6905775514071628, 14.0485463588189443, 19.6895343447078552,
                19.6924512392038693,  6.8472185013269300, 15.6068906475296725, 15.6099126435557256,
                19.6667905142054380,  6.8453897315633840,  6.8452809874333056, 14.0540084895117676,],
            [ 25.2075686194952766, 25.2091691528104107, 25.2112729628505754, 19.6667433253896498,
                25.1766388155479213, 19.6628219479414312, 17.5313622312079929, 17.5386676751267139,
                8.8033048524468427,  8.8034841276629034,  8.8054496400666640,  8.8059376447391671,
                8.8054432912190439, 25.2089769811127304, 17.5313861252965957, 25.2075511802449803,
                25.2115378050028092,  8.8059436398559328, 19.6627973445511373, 19.6667905142054380,
                25.1764629391176662,  8.8034711244586408,  8.8033241012841863, 17.5385969011738858,],
            [  8.8144403137368528,  8.8150047465886363,  8.8157466642273370,  6.8453730078445894,
                8.8035331444329810,  6.8439832714716697,  6.0923801967780671,  6.0949731702335450,
                3.0876080118074545,  3.0876712925998615,  3.0883650816529635,  3.0885373381592052,
                3.0883628406287045,  8.8149369765710439,  6.0923886786989252,  8.8144341637430017,
                8.8158400621728656,  3.0885394543231013,  6.8439745520288664,  6.8453897315633840,
                8.8034711244586408,  3.0876667027123821,  3.0876148062863953,  6.0949480530765472,],
            [  8.8142930649509470,  8.8148574861985942,  8.8155993885850865,  6.8452642640145758,
                8.8033861199824521,  6.8438745525769047,  6.0922869327208833,  6.0948798601338297,
                3.0875561165422560,  3.0876193960830958,  3.0883131714144403,  3.0884854245137920,
                3.0883109304345031,  8.8147897175742518,  6.0922954144911303,  8.8142869150835335,
                8.8156927846106274,  3.0884875406358345,  6.8438658332905495,  6.8452809874333056,
                8.8033241012841863,  3.0876148062863953,  3.0875629108868154,  6.0948547434228288,],
            [ 17.5579255239337293, 17.5589202849355637, 17.5602278769914122, 14.0539771599134955,
                17.5387061682987166, 14.0513736790252430, 12.7434566306796935, 12.7483542008493718,
                6.0948425269654312,  6.0949563056836045,  6.0962037367940844,  6.0965134535933139,
                6.0961997074376564, 17.5588008454618745, 12.7434726519171804, 17.5579146852439187,
                17.5603924885960154,  6.0965172584510974, 14.0513573443425415, 14.0540084895117676,
                17.5385969011738858,  6.0949480530765472,  6.0948547434228288, 12.7483067621211834,],
        ];

        let mut c6_ref: Array2<f64> = Array::zeros((24, 24));
        for i in 0..24 {
            for j in 0..24 {
                c6_ref[[i, j]] = c6_ref_array[i][j];
            }
        }
        let c6_ref: Array2<f64> = c6_ref.reversed_axes();

        let dc6dcn_ref_array: [[f64; 24]; 24] = [
            [ -2.1222110838759121, -2.1223864889426345, -2.1226170336686443, -1.5502374972706328,
                -2.1188196673922657, -1.5498751000181894, -1.3161972537106461, -1.3168648462904247,
                -0.7471827229480974, -0.7472014548490700, -0.7474068250308252, -0.7474578150973837,
                -0.7474061616597942, -2.1223654290576550, -1.3161994373785562, -2.1222091726253280,
                -2.1226460549881452, -0.7474584415081955, -1.5498728262760899, -1.5502418582630408,
                -2.1188003740652426, -0.7472000961853350, -0.7471847341983020, -1.3168583792462223,],
            [ -2.1120314914160456, -2.1122060452459901, -2.1124354711488298, -1.5428186415690668,
                -2.1086565339915202, -1.5424579833575240, -1.3099142481941604, -1.3105786386967542,
                -0.7436011434888556, -0.7436197847357403, -0.7438241610169618, -0.7438749043142283,
                -0.7438235008563525, -2.1121850875639754, -1.3099164213883570, -2.1120295894407377,
                -2.1124643516295913, -0.7438755276934896, -1.5424557205264655, -1.5428229816343197,
                -2.1086373343008509, -0.7436184326473352, -0.7436031450055016, -1.3105722026718900,],
            [ -2.0986501607528263, -2.0988235955203933, -2.0990515505834999, -1.5330665256302911,
                -2.0952968409252954, -1.5327081534385112, -1.3016553568043152, -1.3023155380972504,
                -0.7388930892474077, -0.7389116113198761, -0.7391146810133933, -0.7391650999062435,
                -0.7391140250732221, -2.0988027721975757, -1.3016575162305548, -2.0986482709710823,
                -2.0990802459132776, -0.7391657193002094, -1.5327059049503280, -1.5330708381861875,
                -2.0952777643319482, -0.7389102678754393, -0.7388950779682579, -1.3023091428480813,],
            [ -0.1443737170838798, -0.1443837822227715, -0.1443970122427423, -0.1091124411837461,
                -0.1441792076300784, -0.1090882970081263, -0.0956782875173240, -0.0957231588404135,
                -0.0510956899441195, -0.0510968078591732, -0.0511090642990355, -0.0511121073731517,
                -0.0511090247092223, -0.1443825737299529, -0.0956784343188875, -0.1443736074150192,
                -0.1443986777264434, -0.0511121447571886, -0.1090881455234545, -0.1091127317283498,
                -0.1441781015704950, -0.0510967267744694, -0.0510958099750168, -0.0957227242572356,],
            [ -2.3186373840500649, -2.3188292043009762, -2.3190813243317940, -1.6934103743180167,
                -2.3149285729575397, -1.6930144211500746, -1.4374665440339303, -1.4381959243396276,
                -0.8162957353960173, -0.8163162157240098, -0.8165407550640597, -0.8165965045199747,
                -0.8165400297742816, -2.3188061735417596, -1.4374689298042445, -2.3186352939358397,
                -2.3191130615757531, -0.8165971893996835, -1.6930119368724448, -1.6934151391134122,
                -2.3149074739608366, -0.8163147302432266, -0.8162979343753906, -1.4381888587424296,],
            [ -0.1141175758446966, -0.1141255316503731, -0.1141359890786420, -0.0862459426642525,
                -0.1139638293904057, -0.0862268583402889, -0.0756271601187165, -0.0756626278373354,
                -0.0403876576942797, -0.0403885413298709, -0.0403982292095066, -0.0404006345520116,
                -0.0403981979164598, -0.1141245764192401, -0.0756272761553336, -0.1141174891589439,
                -0.1141373055298928, -0.0404006641015425, -0.0862267386019886, -0.0862461723199437,
                -0.1139629551257574, -0.0403884772379437, -0.0403877525705161, -0.0756622843289911,],
            [ -0.7099274580724404, -0.7099764024296975, -0.7100407370206903, -0.5369751437797525,
                -0.7089816256130286, -0.5368566729040469, -0.4751471839895680, -0.4753785041905856,
                -0.2516673485219437, -0.2516727977111596, -0.2517325407656071, -0.2517473739916221,
                -0.2517323477881687, -0.7099705258128015, -0.4751479423077104, -0.7099269247796958,
                -0.7100488359050978, -0.2517475562171764, -0.5368559295976048, -0.5369765694268742,
                -0.7089762473264083, -0.2516724024701330, -0.2516679336031345, -0.4753762685432609,],
            [ -0.6787097483462075, -0.6787565335603640, -0.6788180300696972, -0.5135003922875545,
                -0.6778056393961803, -0.5133871941141832, -0.4541007791958114, -0.4543209251945972,
                -0.2405412883945532, -0.2405464966606776, -0.2406035983164146, -0.2406177757262110,
                -0.2406034138710201, -0.6787509161863021, -0.4541015007633569, -0.6787092385792328,
                -0.6788257716758822, -0.2406179498950906, -0.5133864838895716, -0.5135017544843703,
                -0.6778004983561845, -0.2405461188943043, -0.2405418476077547, -0.4543187971756552,],
            [ -0.6222063479319747, -0.6222553817192189, -0.6223198305946056, -0.4595019301193243,
                -0.6212584087376541, -0.4593965651117783, -0.3940914558723870, -0.3942860106488976,
                -0.2192857702348925, -0.2192910587889713, -0.2193490406944920, -0.2193634366559526,
                -0.2193488534057819, -0.6222494944772903, -0.3940920922849777, -0.6222058136531272,
                -0.6223279435995798, -0.2193636135097304, -0.4593959040337702, -0.4595031980538750,
                -0.6212530166128790, -0.2192906751991453, -0.2192863380686371, -0.3942841260733282,],
            [ -0.6234697124805000, -0.6235188458288440, -0.6235834255650370, -0.4604349300001852,
                -0.6225198485344045, -0.4603293510532998, -0.3948916424598118, -0.3950865922718410,
                -0.2197310210251352, -0.2197363203174068, -0.2197944199528160, -0.2198088451446876,
                -0.2197942322838238, -0.6235129466331115, -0.3948922801646122, -0.6234691771168208,
                -0.6235915550431359, -0.2198090223575598, -0.4603286886329999, -0.4604362005092253,
                -0.6225144454611407, -0.2197359359487173, -0.2197315900118431, -0.3950847038697181,],
            [ -0.6373145324784218, -0.6373647568859619, -0.6374307706851186, -0.4706593861349450,
                -0.6363435757749828, -0.4705514626932337, -0.4036606389308483, -0.4038599178145263,
                -0.2246103862503509, -0.2246158032191450, -0.2246751930198629, -0.2246899385387383,
                -0.2246750011834775, -0.6373587266922017, -0.4036612907965743, -0.6373139852264124,
                -0.6374390806870804, -0.2246901196868143, -0.4705507855631735, -0.4706606848570138,
                -0.6363380527206276, -0.2246154103151325, -0.2246109678720245, -0.4038579874783898,],
            [ -0.6407501922164582, -0.6408006873756704, -0.6408670570445589, -0.4731966348886877,
                -0.6397740012422111, -0.4730881296491283, -0.4058367082566360, -0.4060370614205984,
                -0.2258212245750071, -0.2258266707458052, -0.2258863807073493, -0.2259012057169359,
                -0.2258861878368049, -0.6407946246741092, -0.4058373636364649, -0.6407496420143021,
                -0.6408754118443994, -0.2259013878415519, -0.4730874488687694, -0.4731979406119575,
                -0.6397684484139607, -0.2258262757237108, -0.2258218093321093, -0.4060351206783316,],
            [ -0.6372698305266670, -0.6373200514114116, -0.6373860605802865, -0.4706263735609340,
                -0.6362989419272138, -0.4705184576890931, -0.4036323257236528, -0.4038315906296877,
                -0.2245946318274747, -0.2246000484163166, -0.2246594340513678, -0.2246741785359760,
                -0.2246592422284380, -0.6373140216406156, -0.4036329775436564, -0.6372692833130429,
                -0.6373943699993756, -0.2246743596713460, -0.4705177806065275, -0.4706276721919088,
                -0.6362934192602512, -0.2245996555398627, -0.2245952134083529, -0.4038296604289472,],
            [ -2.1132537600998940, -2.1134284161413630, -2.1136579763859351, -1.5437094218308065,
                -2.1098768263677683, -1.5433485548115371, -1.3106686422005167, -1.3113334171780466,
                -0.7440311847363950, -0.7440498368684137, -0.7442543324905330, -0.7443051054181976,
                -0.7442536719444364, -2.1134074461874133, -1.3106708166522969, -2.1132518570108627,
                -2.1136868737777861, -0.7443057291614669, -1.5433462906703816, -1.5437137644087962,
                -2.1098576154337909, -0.7440484839904871, -0.7440331874217820, -1.3113269774286749,],
            [ -0.7098212297404287, -0.7098701667520189, -0.7099344916875171, -0.5368952331713541,
                -0.7088755392297111, -0.5367767802238688, -0.4750756002846511, -0.4753068826815865,
                -0.2516295015489785, -0.2516349499186620, -0.2516946839880354, -0.2517095149832029,
                -0.2516944910396199, -0.7098642910170994, -0.4750763584784848, -0.7098206965277227,
                -0.7099425893564209, -0.2517096971813515, -0.5367760370299117, -0.5368966586027302,
                -0.7088701617502360, -0.2516345547370777, -0.2516300865421757, -0.4753046473984585,],
            [ -2.1223219960637927, -2.1224974104048799, -2.1227279673206541, -1.5503183302923524,
                -2.1189304002560099, -1.5499559140921395, -1.3162657114597043, -1.3169333389278588,
                -0.7472217462804713, -0.7472404791691426, -0.7474458601796975, -0.7474968529348703,
                -0.7474451967736880, -2.1224763494063841, -1.3162678952417310, -2.1223200847121539,
                -2.1227569901746151, -0.7474974793787110, -1.5499536402311573, -1.5503226915127755,
                -2.1189111059088068, -0.7472391204337674, -0.7472237576367248, -1.3169268715456837,],
            [ -2.0969655736543720, -2.0971388675348610, -2.0973666374230300, -1.5318388362530815,
                -2.0936149779451121, -1.5314807518508200, -1.3006156606019885, -1.3012753119940621,
                -0.7383003901034457, -0.7383188971723478, -0.7385218023718634, -0.7385721804235352,
                -0.7385211469630286, -2.0971180611275240, -1.3006178182949717, -2.0969636854077640,
                -2.0973953094427769, -0.7385727993157695, -1.5314785051682769, -1.5318431453457944,
                -2.0935959168494058, -0.7383175548161506, -0.7383023772133591, -1.3012689218781770,],
            [ -0.6407923947401837, -0.6408428932252211, -0.6409092672654974, -0.4732278016248875,
                -0.6398161394698610, -0.4731192892387128, -0.4058634383825366, -0.4060638047426079,
                -0.2258360981180877, -0.2258415446475937, -0.2259012585418889, -0.2259160845279136,
                -0.2259010656586413, -0.6408368301243444, -0.4058640938055317, -0.6407918445017888,
                -0.6409176226156205, -0.2259162666645251, -0.4731186084135152, -0.4732291074341576,
                -0.6398105862758783, -0.2258411495994814, -0.2258366829137045, -0.4060618638725155,],
            [ -0.1139274435089371, -0.1139353860593725, -0.1139458260644239, -0.0861022475130564,
                -0.1137739532130293, -0.0860831949856598, -0.0755011570156829, -0.0755365656412014,
                -0.0403203674484932, -0.0403212496118509, -0.0403309213504214, -0.0403333226853632,
                -0.0403308901095122, -0.1139344324197590, -0.0755012728589703, -0.1139273569676124,
                -0.1139471403223232, -0.0403333521856613, -0.0860830754468566, -0.0861024767861164,
                -0.1137730804050015, -0.0403211856267080, -0.0403204621666553, -0.0755362227051795,],
            [ -0.1447372324840067, -0.1447473229656920, -0.1447605862972398, -0.1093871729898438,
                -0.1445422332791122, -0.1093629680221360, -0.0959191937700837, -0.0959641780737145,
                -0.0512243426563729, -0.0512254633862005, -0.0512377506862838, -0.0512408014224896,
                -0.0512377109967882, -0.1447461114300359, -0.0959193409412757, -0.1447371225390139,
                -0.1447622559744264, -0.0512408389006549, -0.1093628161560442, -0.1093874642660033,
                -0.1445411244346055, -0.0512253820973352, -0.0512244629894933, -0.0959637423963092,],
            [ -2.3197518941525939, -2.3199438074917333, -2.3201960498731342, -1.6942228156352197,
                -2.3160412831623218, -1.6938266720769324, -1.4381547734476219, -1.4388845043336826,
                -0.8166878905501265, -0.8167083807944765, -0.8169330288540935, -0.8169888053033050,
                -0.8169323032131385, -2.3199207655559628, -1.4381571603646530, -2.3197498030240586,
                -2.3202278025187248, -0.8169894905146258, -1.6938241866047630, -1.6942275827217230,
                -2.3160201739259492, -0.8167068945944405, -0.8166900905942226, -1.4388774353403280,],
            [ -0.6233780812424574, -0.6234272073696808, -0.6234917776146017, -0.4603672599565095,
                -0.6224283568977049, -0.4602616965265440, -0.3948336053020042, -0.3950285264622925,
                -0.2196987271941921, -0.2197040257076277, -0.2197621168041432, -0.2197765398759469,
                -0.2197619291627327, -0.6234213090409526, -0.3948342429130814, -0.6233775459574602,
                -0.6234999058979125, -0.2197767170627742, -0.4602610342035998, -0.4603685302788227,
                -0.6224229546185299, -0.2197036413954288, -0.2196992960972761, -0.3950266383377079,],
            [ -0.6223420003757489, -0.6223910448532614, -0.6224555077796905, -0.4596021100032915,
                -0.6213938545132239, -0.4594967220242334, -0.3941773750682245, -0.3943719722612599,
                -0.2193335785716541, -0.2193388682787352, -0.2193968628253793, -0.2194112619254245,
                -0.2193966754958367, -0.6223851563278058, -0.3941780116195652, -0.6223414659804185,
                -0.6224636225534489, -0.2194114388177598, -0.4594960608020979, -0.4596033782142750,
                -0.6213884612128668, -0.2193384846052795, -0.2193341465291970, -0.3943700872748185,],
            [ -0.6789993663802759, -0.6790461716302661, -0.6791076944756753, -0.5137180827694352,
                -0.6780948702564269, -0.5136048356364822, -0.4542961378204206, -0.4545163881655533,
                -0.2406445491929555, -0.2406497596950956, -0.2407068858657462, -0.2407210693621951,
                -0.2407067013411654, -0.6790405518505522, -0.4542968597312230, -0.6789988563949921,
                -0.6791154393972368, -0.2407212436058496, -0.5136041251046901, -0.5137194455554170,
                -0.6780897270149000, -0.2406493817665393, -0.2406451086462389, -0.4545142591417883,],
        ];

        let mut dc6dcn_ref: Array2<f64> = Array::zeros((24, 24));
        for i in 0..24 {
            for j in 0..24 {
                dc6dcn_ref[[i, j]] = dc6dcn_ref_array[i][j];
            }
        }
        let dc6dcn_ref: Array2<f64> = dc6dcn_ref.reversed_axes();

        println!("{:20.16}", dc6dcn);

        assert!(c6.abs_diff_eq(&c6_ref, 1e-13));
        assert!(dc6dcn.abs_diff_eq(&dc6dcn_ref, 1e-13));
    }
}
